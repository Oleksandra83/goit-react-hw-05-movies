{"version":3,"file":"static/js/474.6af52984.chunk.js","mappings":"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","sources":["components/ErrorView/ErrorView.styled.jsx","components/ErrorView/ErrorView.jsx","modules/Cast/Cast.styled.jsx","modules/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\tgap: 20px;\n\tmargin: 1vh auto;\n`;\n\nexport const Text = styled.p`\n\tmax-width: 80%;\n\tcolor: #9e035d;\n\ttext-shadow: 2px 2px 5px white;\n\ttext-align: center;\n\tfont-family: 'Dancing Script';\n\tfont-size: 48px;\n`;\n\nexport const ErrorImg = styled.img`\n\twidth: 25vw;\n\theight: auto;\n\tobject-fit: contain;\n\tobject-position: center;\n\tmargin: 0 auto;\n`;","import PropTypes from 'prop-types';\nimport ErrorImage from '../../images/No_movie_poster.png';\nimport { Wrapper, ErrorImg, Text } from './ErrorView.styled';\n\nexport default function ErrorView({ message }) {\n\treturn (\n\t\t<Wrapper role=\"alert\">\n\t\t\t<Text>{message}</Text>\n\t\t\t<ErrorImg src={ErrorImage} width=\"180\" alt=\"movie poster\" />\n\t\t</Wrapper>\n\t);\n}\n\nErrorView.propTypes = {\n\tmessage: PropTypes.string,\n};","import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tgap: 16px;\n\tpadding: 16px 0;\n\ttext-align: center;\n`;\n\nexport const CastItem = styled.li`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-wrap: wrap;\n\tmax-width: 100%;\n\twidth: 200px;\n\t/* height: 100%; */\n\tborder-radius: 8px;\n\tborder: none;\n\toutline: none;\n\tfont-size: 12px;\n\tfont-weight: 700;\n\toverflow: hidden;\n\tbox-shadow: 9px 7px 19px 7px rgba(42, 79, 42, 0.17);\n`;\n\nexport const CastPhotoCard = styled.div`\n\tposition: relative;\n\toverflow: hidden;\n\tmargin-bottom: 8px;\n`;\n\nexport const CastPhoto = styled.img`\n\tdisplay: block;\n\twidth: 100%;\n\theight: 320px;\n\tmin-height: 100%;\n\tobject-fit: cover;\n\tobject-position: center;\n\tborder-top-left-radius: 8px;\n\tborder-top-right-radius: 8px;\n\ttransition: transform 250ms linear;\n\ttransform: scale(1);\n\n\t&:hover {\n\t\ttransform: scale(1.1);\n\t}\n`;\n\nexport const WrapActors = styled.div`\n\tflex-direction: column;\n\talign-items: center;\n\tflex: 1 0 auto;\n\tpadding: 4px;\n`;\n\nexport const ActorsName = styled.h3`\n\tmargin-bottom: 8px;\n\ttext-align: center;\n\tcolor: #2b2828;\n\tfont-size: 12px;\n\tfont-weight: 500;\n`;\n\nexport const ActorsCharacter = styled.p`\n\tmargin-bottom: 8px;\n\ttext-align: center;\n\tcolor: #2b2828;\n\tfont-size: 12px;\n\tfont-weight: 500;\n`;\n\nexport const MovieHero = styled.span`\n\tcolor: #f03251;\n`","import { useState, useEffect} from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { getMoviesCast } from \"services/api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport ErrorView from \"components/ErrorView/ErrorView\";\nimport {\n\tCastList,\n\tCastItem,\n\tCastPhotoCard,\n\tCastPhoto,\n\tWrapActors,\n\tActorsName,\n\tActorsCharacter,\n\tMovieHero,\n} from \"./Cast.styled.jsx\";\nimport Avatar from \"../../images/no-avatar.png\";\n\nconst Cast = () => {\n\tconst location = useLocation();\n\tconst { movieId } = useParams();\n\tconst [castList, setCastList] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(false);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tsetIsLoading(true);\n\t\t\t\tsetError(false);\n\n\t\t\t\tconst data = await getMoviesCast(movieId);\n\t\t\t\tsetCastList(data);\n\t\t\t} catch (error) {\n\t\t\t\tsetError(error);\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t})();\n\t}, [movieId]);\n\n\tif (!castList) {\n\t\treturn;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <Loader />}\n\t\t\t{error && <ErrorView message=\"Oops, mistake... Please try again\" />}\n\n\t\t\t{castList.length > 0 ? (\n\t\t\t\t<CastList>\n\t\t\t\t\t{castList.map(actor => (\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`/actors/${actor.id}`}\n\t\t\t\t\t\t\tstate={{ from: location }}\n\t\t\t\t\t\t\tkey={actor.id}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CastItem key={actor.id}>\n\t\t\t\t\t\t\t\t<CastPhotoCard>\n\t\t\t\t\t\t\t\t\t<CastPhoto\n\t\t\t\t\t\t\t\t\t\tsrc={actor.profile_path\n\t\t\t\t\t\t\t\t\t\t\t? `https://image.tmdb.org/t/p/original${actor.profile_path}`\n\t\t\t\t\t\t\t\t\t\t\t: Avatar\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\talt={actor.name}\n\t\t\t\t\t\t\t\t\t\twidth=\"160\" \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</CastPhotoCard>\n\t\t\t\t\t\t\t\t<WrapActors>\n\t\t\t\t\t\t\t\t\t<ActorsName>{actor.name}</ActorsName>\n\t\t\t\t\t\t\t\t\t{actor.character && (\n\t\t\t\t\t\t\t\t\t\t<ActorsCharacter>\n\t\t\t\t\t\t\t\t\t\t\t<span>Character: </span>\n\t\t\t\t\t\t\t\t\t\t\t<MovieHero>{actor.character}</MovieHero>\n\t\t\t\t\t\t\t\t\t\t</ActorsCharacter>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</WrapActors>\n\t\t\t\t\t\t\t</CastItem>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t))}\n\t\t\t\t</CastList>\n\t\t\t) : (\n\t\t\t\t\t<div style={{padding: '24px', textAlign: 'center'}}>\n\t\t\t\t\t\t<p>We don't have info about cast for this movie!</p>\n\t\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n\tapi_key: `effc343b47c620264dd2241b3bdd904f`,\n\tlanguage: 'en-US',\n\tinclude_adult: false,\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n\ttry {\n\t\tconst { data } = await axios.get('/trending/movie/day', {\n\t\t\tparams: {\n\t\t\t\tpage,\n\t\t\t},\n\t\t});\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow new Error('Oops, there is no movies');\n\t}\n};\n\nexport const getMoviesSearch = async (page = 1, query = '', language) => {\n\ttry {\n\t\tconst urlParam = query\n\t\t\t? `/search/movie?page=${page}&query=${query}&language=${language}`\n\t\t\t: `/movie/upcoming?page=${page}&language=${language}`;\n\t\tconst { data } = await axios.get(urlParam);\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow new Error('Oops, there is no movie');\n\t}\n};\n\nexport const getMovieDetails = async (movieId) => {\n\ttry {\n\t\tconst { data } = await axios.get(`/movie/${movieId}`, {\n\t\t\tparams: {\n\t\t\t\tid: movieId,\n\t\t\t},\n\t\t});\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow new Error('Oops, there is no movie with that name');\n\t}\n};\n\nexport const getMoviesCast = async (movieId) => {\n\ttry {\n\t\tconst { data } = await axios.get(`/movie/${movieId}/credits`, {\n\t\t\tparams: {\n\t\t\t\tid: movieId,\n\t\t\t},\n\t\t});\n\t\treturn data.cast;\n\t} catch (error) {\n\t\tthrow new Error('Oops, there is no cast movie');\n\t}\n};\n\nexport const getMoviesReviews = async (movieId) => {\n\ttry {\n\t\tconst { data } = await axios.get(`/movie/${movieId}/reviews`, {\n\t\t\tparams: {\n\t\t\t\tid: movieId,\n\t\t\t},\n\t\t});\n\t\treturn data.results;\n\t} catch (error) {\n\t\tthrow new Error('Oops, we don`t have any reviews');\n\t}\n};"],"names":["Wrapper","styled","Text","ErrorImg","ErrorView","message","role","src","ErrorImage","width","alt","CastList","CastItem","CastPhotoCard","CastPhoto","WrapActors","ActorsName","ActorsCharacter","MovieHero","location","useLocation","movieId","useParams","useState","castList","setCastList","isLoading","setIsLoading","error","setError","useEffect","getMoviesCast","data","Loader","length","map","actor","to","id","state","from","profile_path","name","character","style","padding","textAlign","axios","api_key","language","include_adult","getTrendingMovies","page","params","Error","getMoviesSearch","query","urlParam","getMovieDetails","cast","getMoviesReviews","results"],"sourceRoot":""}